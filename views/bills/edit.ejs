<%- include('../partials/header') %>

<div class="container-fluid">
  <div class="row">
    <!-- Sidebar -->
    <div class="col-md-3 col-lg-2 d-md-block bg-dark">
      <%- include('../partials/sidebar', { path: '/bills' }) %>
    </div>

    <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
      <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2">Edit Bill <%= bill.billNumber %></h1>
        <div class="btn-toolbar mb-2 mb-md-0">
          <a href="/bills/<%= bill._id %>" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left"></i> Back to Bill
          </a>
        </div>
      </div>

      <%- include('../partials/messages') %>

      <div class="row mb-4">
        <div class="col-md-12">
          <div class="card">
            <div class="card-header">
              <h5 class="card-title mb-0">Edit Bill Information</h5>
            </div>
            <div class="card-body">
              <form action="/bills/<%= bill._id %>/edit" method="POST" id="editBillForm">
                <!-- Customer Information -->
                <div class="row mb-4">
                  <div class="col-12">
                    <h5>Customer Information</h5>
                  </div>

                  <div class="col-md-12 mb-3">
                    <div class="form-check form-switch">
                      <input class="form-check-input" type="checkbox" id="unknownCustomer" name="unknownCustomer" <%= bill.isUnknown ? 'checked' : '' %>>
                      <label class="form-check-label" for="unknownCustomer">
                        <strong>Edit as unknown customer</strong>
                      </label>
                    </div>
                    <small class="form-text text-muted">Enable this to edit the bill as unknown customer. All fields will be automatically filled as "Unknown".</small>
                  </div>

                  <div class="col-md-4 mb-3">
                    <label for="customerName" class="form-label">Customer Name</label>
                    <input type="text" class="form-control" id="customerName" name="customerName" value="<%= bill.customer.name %>" required>
                  </div>

                  <div class="col-md-4 mb-3">
                    <label for="customerPhone" class="form-label">Phone Number</label>
                    <input type="text" class="form-control" id="customerPhone" name="customerPhone" value="<%= bill.customer.phone %>" required>
                  </div>

                  <div class="col-md-4 mb-3">
                    <label for="customerPlace" class="form-label">Place</label>
                    <input type="text" class="form-control" id="customerPlace" name="customerPlace" value="<%= bill.customer.place %>" required>
                  </div>

                  <div class="col-md-4 mb-3">
                    <label for="customerEmail" class="form-label">Email</label>
                    <input type="email" class="form-control" id="customerEmail" name="customerEmail" value="<%= bill.customer.email || '' %>" placeholder="Optional">
                  </div>
                </div>

                <!-- Work Information -->
                <div class="row mb-4">
                  <div class="col-md-6 mb-3">
                    <label for="work" class="form-label">Work</label>
                    <input type="text" class="form-control" id="work" name="work" value="<%= bill.work %>" required>
                  </div>

                  <div class="col-md-6 mb-3">
                    <label for="pickedBy" class="form-label">Picked By</label>
                    <input type="text" class="form-control" id="pickedBy" name="pickedBy" value="<%= bill.pickedBy %>" required>
                  </div>
                </div>

                <!-- Products Information (Read-only) -->
                <div class="row mb-4">
                  <div class="col-12">
                    <h5>Products</h5>
                    <p class="text-muted small">Products cannot be edited. Create a new bill if you need to change products.</p>
                  </div>

                  <div class="col-12">
                    <div class="table-responsive">
                      <table class="table table-striped">
                        <thead>
                          <tr>
                            <th>Product</th>
                            <th>Category</th>
                            <th>Price</th>
                            <th>Quantity</th>
                            <th>Total</th>
                          </tr>
                        </thead>
                        <tbody>
                          <% bill.items.forEach(item => { %>
                            <tr>
                              <td><%= item.name %></td>
                              <td><%= item.category %></td>
                              <td>₹<%= item.price.toFixed(2) %></td>
                              <td><%= item.quantity %></td>
                              <td>₹<%= (item.price * item.quantity).toFixed(2) %></td>
                            </tr>
                          <% }) %>
                        </tbody>
                        <tfoot>
                          <% if (bill.gstEnabled) { %>
                          <tr>
                            <td colspan="4" class="text-end">Subtotal:</td>
                            <td>₹<%= bill.subTotal.toFixed(2) %></td>
                          </tr>
                          <tr>
                            <td colspan="4" class="text-end">GST (<%= bill.gstType %> @ <%= bill.gstPercentage %>%):</td>
                            <td>₹<%= bill.gstAmount.toFixed(2) %></td>
                          </tr>
                          <% } %>
                          <% if (bill.discountAmount && bill.discountAmount > 0) { %>
                          <tr>
                            <td colspan="4" class="text-end text-success">Discount:</td>
                            <td class="text-success">-₹<%= bill.discountAmount.toFixed(2) %></td>
                          </tr>
                          <% } %>
                          <tr>
                            <th colspan="4" class="text-end">Total Amount:</th>
                            <th>₹<%= bill.totalAmount.toFixed(2) %></th>
                          </tr>
                        </tfoot>
                      </table>
                    </div>
                  </div>
                </div>

                <!-- GST Information -->
                <div class="row mb-4">
                  <div class="col-12">
                    <h5>GST Information</h5>
                  </div>
                  <div class="col-md-6 mb-3">
                    <div class="form-check form-switch">
                      <input class="form-check-input" type="checkbox" id="gstEnabled" name="gstEnabled" <%= bill.gstEnabled ? 'checked' : '' %>>
                      <label class="form-check-label" for="gstEnabled">Enable GST</label>
                    </div>
                    <small class="form-text text-muted">Toggle to enable/disable GST for this bill</small>
                    <!-- Hidden inputs for GST values -->
                    <input type="hidden" id="defaultGstType" name="defaultGstType" value="CGST+SGST 12%">
                  </div>
                  <div class="col-md-6 mb-3 <%= bill.gstEnabled ? '' : 'd-none' %>" id="gstTypeContainer">
                    <label for="gstType" class="form-label">GST Type</label>
                    <select class="form-select" id="gstType" name="gstType">
                      <option value="CGST+SGST 5%" <%= bill.gstType === 'CGST+SGST 5%' ? 'selected' : '' %>>CGST+SGST 5%</option>
                      <option value="CGST+SGST 12%" <%= bill.gstType === 'CGST+SGST 12%' || !bill.gstType ? 'selected' : '' %>>CGST+SGST 12%</option>
                      <option value="CGST+SGST 18%" <%= bill.gstType === 'CGST+SGST 18%' ? 'selected' : '' %>>CGST+SGST 18%</option>
                      <option value="CGST+SGST 28%" <%= bill.gstType === 'CGST+SGST 28%' ? 'selected' : '' %>>CGST+SGST 28%</option>
                      <option value="IGST 5%" <%= bill.gstType === 'IGST 5%' ? 'selected' : '' %>>IGST 5%</option>
                      <option value="IGST 12%" <%= bill.gstType === 'IGST 12%' ? 'selected' : '' %>>IGST 12%</option>
                      <option value="IGST 18%" <%= bill.gstType === 'IGST 18%' ? 'selected' : '' %>>IGST 18%</option>
                      <option value="IGST 28%" <%= bill.gstType === 'IGST 28%' ? 'selected' : '' %>>IGST 28%</option>
                    </select>
                  </div>
                  <div class="col-md-6 mb-3 <%= bill.gstEnabled ? '' : 'd-none' %>" id="gstPercentageContainer">
                    <label for="gstPercentage" class="form-label">GST Percentage (%)</label>
                    <input type="text" class="form-control" id="gstPercentage" name="gstPercentage" value="<%= bill.gstPercentage || 12 %>" readonly>
                    <small class="form-text text-muted">GST percentage is set based on the selected GST type</small>
                  </div>
                  <div class="col-md-6 mb-3 <%= bill.gstEnabled ? '' : 'd-none' %>" id="subtotalContainer">
                    <label for="subtotal" class="form-label">Subtotal (₹)</label>
                    <input type="text" class="form-control" id="subtotal" name="subtotal" value="<%= bill.subTotal ? bill.subTotal.toFixed(2) : bill.totalAmount.toFixed(2) %>" readonly>
                    <small class="form-text text-muted">Amount before GST</small>
                  </div>
                  <div class="col-md-6 mb-3 <%= bill.gstEnabled ? '' : 'd-none' %>" id="gstAmountContainer">
                    <label for="gstAmount" class="form-label">GST Amount (₹)</label>
                    <input type="text" class="form-control" id="gstAmount" name="gstAmount" value="<%= bill.gstAmount ? bill.gstAmount.toFixed(2) : '0.00' %>" readonly>
                    <small class="form-text text-muted">GST amount calculated based on subtotal</small>
                  </div>
                  <div class="col-md-6 mb-3 <%= bill.gstEnabled ? '' : 'd-none' %>" id="totalWithGstContainer">
                    <label for="totalWithGst" class="form-label">Total Amount (Including GST) (₹)</label>
                    <input type="text" class="form-control" id="totalWithGst" name="totalWithGst" value="<%= bill.gstEnabled ? bill.totalAmount.toFixed(2) : '0.00' %>" readonly>
                    <small class="form-text text-muted">Total amount including GST (Subtotal + GST Amount)</small>
                  </div>
                </div>

                <!-- Payment Information -->
                <div class="row mb-4">
                  <div class="col-12">
                    <h5>Payment Information</h5>
                  </div>

                  <div class="col-md-6 mb-3">
                    <label for="billDate" class="form-label">Bill Date</label>
                    <input type="date" class="form-control" id="billDate" name="billDate"
                           max="<%= new Date().toISOString().split('T')[0] %>"
                           value="<%= bill.billDate ? bill.billDate.toISOString().split('T')[0] : new Date().toISOString().split('T')[0] %>"
                           required>
                    <small class="form-text text-muted">Select the date for this bill (cannot be future date)</small>
                  </div>

                  <input type="hidden" id="paymentType" name="paymentType" value="Cash">

                  <div class="col-md-6 mb-3">
                    <label for="discountAmount" class="form-label">Discount Amount (₹) <span class="text-muted">(Optional)</span></label>
                    <input type="number" class="form-control" id="discountAmount" name="discountAmount" step="0.01" min="0" value="<%= bill.discountAmount || 0 %>" placeholder="0.00" oninput="updateDiscountAmount()">
                    <small class="form-text text-muted">Enter discount amount to be deducted from total (optional)</small>
                    <div class="mt-2">
                      <small class="text-info">
                        <strong>Current Total: <span id="currentTotalDisplay">₹<%= bill.totalAmount.toFixed(2) %></span></strong>
                      </small>
                    </div>
                  </div>

                  <div class="col-md-6 mb-3">
                    <label for="paidAmount" class="form-label">Paid Amount (₹)</label>
                    <input type="number" class="form-control" id="paidAmount" name="paidAmount" step="0.01" min="0" max="<%= bill.totalAmount %>" value="<%= bill.paidAmount %>" required oninput="validatePaidAmount(this)">
                    <div class="invalid-feedback" id="paidAmountFeedback">Paid amount cannot exceed the total amount of ₹<%= bill.totalAmount.toFixed(2) %>.</div>
                  </div>

                  <div class="col-md-6 mb-3">
                    <div class="alert alert-info">
                      <small>Enter the amount paid by the customer. If the customer pays the full amount, the remaining amount will be 0.</small>
                    </div>
                  </div>
                </div>

                <div class="row">
                  <div class="col-12 d-flex justify-content-between">
                    <button type="submit" class="btn btn-primary">
                      <i class="fas fa-save"></i> Update Bill
                    </button>
                    <a href="/bills/<%= bill._id %>/delete" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this bill? This action cannot be undone.');">
                      <i class="fas fa-trash"></i> Delete Bill
                    </a>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </main>
  </div>
</div>

<script>
  // Global variable to track current total amount
  let currentTotalAmount = parseFloat('<%= bill.totalAmount %>');

  // Calculate original subtotal from server data
  const originalSubtotal = parseFloat('<%= bill.subTotal || bill.items.reduce((sum, item) => sum + (item.price * item.quantity), 0) %>');
  const originalGstAmount = parseFloat('<%= bill.gstAmount || 0 %>');

  // Function to calculate current total amount including discount
  function calculateCurrentTotal() {
    const discountAmount = parseFloat(document.getElementById('discountAmount').value) || 0;

    const total = Math.max(0, originalSubtotal + originalGstAmount - discountAmount);
    currentTotalAmount = total;

    // Update the current total display
    const totalDisplay = document.getElementById('currentTotalDisplay');
    if (totalDisplay) {
      totalDisplay.textContent = `₹${total.toFixed(2)}`;
    }

    return total;
  }

  // Function to update discount amount and recalculate total
  function updateDiscountAmount() {
    const discountInput = document.getElementById('discountAmount');
    const paidAmountInput = document.getElementById('paidAmount');

    if (!discountInput || !paidAmountInput) return;

    const discountValue = parseFloat(discountInput.value) || 0;
    const maxDiscount = originalSubtotal + originalGstAmount;

    // Validate discount doesn't exceed subtotal + GST
    if (discountValue > maxDiscount) {
      alert(`Discount amount cannot exceed the subtotal + GST amount (₹${maxDiscount.toFixed(2)})`);
      discountInput.value = maxDiscount.toFixed(2);
    }

    // Recalculate total
    const newTotal = calculateCurrentTotal();

    // Update paid amount field max value
    paidAmountInput.max = newTotal.toFixed(2);

    // If current paid amount exceeds new total, adjust it
    const currentPaidAmount = parseFloat(paidAmountInput.value) || 0;
    if (currentPaidAmount > newTotal) {
      paidAmountInput.value = newTotal.toFixed(2);
    }

    // Update validation message
    const feedbackElement = document.getElementById('paidAmountFeedback');
    if (feedbackElement) {
      feedbackElement.textContent = `Paid amount cannot exceed the total amount of ₹${newTotal.toFixed(2)}.`;
    }
  }

  // Function to validate paid amount doesn't exceed total
  function validatePaidAmount(input) {
    const totalAmount = calculateCurrentTotal(); // Use dynamic total
    const paidValue = parseFloat(input.value);

    console.log('Validating paid amount:', paidValue, 'against total:', totalAmount);

    if (isNaN(paidValue)) {
      return;
    }

    // Check if paid amount exceeds total (with tolerance for floating-point precision)
    const tolerance = 0.01; // 1 paisa tolerance
    if (paidValue > (totalAmount + tolerance)) {
      input.value = totalAmount.toFixed(2); // Reset to max allowed value
      input.classList.add('is-invalid');

      // Show feedback message
      const feedbackId = input.id === 'paidAmount' ? 'paidAmountFeedback' : 'customPaidAmountFeedback';
      const feedbackElement = document.getElementById(feedbackId);
      if (feedbackElement) {
        feedbackElement.style.display = 'block';
      }
    } else {
      input.classList.remove('is-invalid');

      // Hide feedback message
      const feedbackId = input.id === 'paidAmount' ? 'paidAmountFeedback' : 'customPaidAmountFeedback';
      const feedbackElement = document.getElementById(feedbackId);
      if (feedbackElement) {
        feedbackElement.style.display = 'none';
      }
    }
  }

  // Function to extract GST percentage from GST type
  function getGstPercentageFromType(gstType) {
    if (!gstType) return 12; // Default to 12%

    // Extract percentage from the type string (e.g., "CGST+SGST 12%" -> 12)
    const match = gstType.match(/(\d+)%/);
    return match ? parseInt(match[1]) : 12;
  }

  // Function to calculate GST amount
  function calculateGstAmount() {
    const subtotal = parseFloat('<%= bill.subTotal || bill.totalAmount %>');
    const gstPercentage = parseFloat(document.getElementById('gstPercentage').value);

    if (isNaN(subtotal) || isNaN(gstPercentage)) return;

    const gstAmount = (subtotal * gstPercentage) / 100;
    document.getElementById('gstAmount').value = gstAmount.toFixed(2);

    // Update total amount (for display only, not changing the actual bill total)
    const totalWithGst = subtotal + gstAmount;
    const totalWithGstInput = document.getElementById('totalWithGst');
    if (totalWithGstInput) {
      totalWithGstInput.value = totalWithGst.toFixed(2);
    }
  }

  document.addEventListener('DOMContentLoaded', function() {
    const paidAmountInput = document.getElementById('paidAmount');
    const gstEnabledCheckbox = document.getElementById('gstEnabled');
    const gstTypeContainer = document.getElementById('gstTypeContainer');
    const gstPercentageContainer = document.getElementById('gstPercentageContainer');
    const subtotalContainer = document.getElementById('subtotalContainer');
    const gstAmountContainer = document.getElementById('gstAmountContainer');
    const totalWithGstContainer = document.getElementById('totalWithGstContainer');
    const gstTypeSelect = document.getElementById('gstType');

    // Unknown customer toggle functionality
    const unknownCustomerToggle = document.getElementById('unknownCustomer');
    const customerNameInput = document.getElementById('customerName');
    const customerPhoneInput = document.getElementById('customerPhone');
    const customerPlaceInput = document.getElementById('customerPlace');
    const customerEmailInput = document.getElementById('customerEmail');
    const workInput = document.getElementById('work');
    const pickedByInput = document.getElementById('pickedBy');

    unknownCustomerToggle.addEventListener('change', function() {
      if (this.checked) {
        // Fill all fields with "Unknown" and disable them
        customerNameInput.value = 'Unknown';
        customerPhoneInput.value = 'Unknown';
        customerPlaceInput.value = 'Unknown';
        customerEmailInput.value = '';
        workInput.value = 'Unknown';
        pickedByInput.value = 'Unknown';

        // Disable the fields
        customerNameInput.disabled = true;
        customerPhoneInput.disabled = true;
        customerPlaceInput.disabled = true;
        customerEmailInput.disabled = true;
        workInput.disabled = true;
        pickedByInput.disabled = true;

        // Remove required attribute temporarily
        customerNameInput.removeAttribute('required');
        customerPhoneInput.removeAttribute('required');
        customerPlaceInput.removeAttribute('required');
        workInput.removeAttribute('required');
        pickedByInput.removeAttribute('required');
      } else {
        // Restore original values and enable them
        customerNameInput.value = '<%= bill.customer.name %>';
        customerPhoneInput.value = '<%= bill.customer.phone %>';
        customerPlaceInput.value = '<%= bill.customer.place %>';
        customerEmailInput.value = '<%= bill.customer.email || "" %>';
        workInput.value = '<%= bill.work %>';
        pickedByInput.value = '<%= bill.pickedBy %>';

        // Enable the fields
        customerNameInput.disabled = false;
        customerPhoneInput.disabled = false;
        customerPlaceInput.disabled = false;
        customerEmailInput.disabled = false;
        workInput.disabled = false;
        pickedByInput.disabled = false;

        // Restore required attributes
        customerNameInput.setAttribute('required', '');
        customerPhoneInput.setAttribute('required', '');
        customerPlaceInput.setAttribute('required', '');
        workInput.setAttribute('required', '');
        pickedByInput.setAttribute('required', '');
      }
    });

    // Initialize the form based on current state
    if (unknownCustomerToggle.checked) {
      unknownCustomerToggle.dispatchEvent(new Event('change'));
    }

    // Initialize discount calculation on page load
    updateDiscountAmount();

    // Set the paid amount to the total amount if it's not already set
    if (!paidAmountInput.value) {
      const totalAmount = calculateCurrentTotal(); // Use dynamic total
      paidAmountInput.value = totalAmount.toFixed(2);
    }

    // Handle GST type change
    if (gstTypeSelect) {
      gstTypeSelect.addEventListener('change', function() {
        const selectedType = this.value;
        const percentage = getGstPercentageFromType(selectedType);

        document.getElementById('gstPercentage').value = percentage;
        calculateGstAmount();
      });
    }

    // Handle GST toggle
    if (gstEnabledCheckbox) {
      gstEnabledCheckbox.addEventListener('change', function() {
        if (this.checked) {
          gstTypeContainer.classList.remove('d-none');
          gstPercentageContainer.classList.remove('d-none');
          subtotalContainer.classList.remove('d-none');
          gstAmountContainer.classList.remove('d-none');
          totalWithGstContainer.classList.remove('d-none');

          // Calculate GST amount
          calculateGstAmount();
        } else {
          gstTypeContainer.classList.add('d-none');
          gstPercentageContainer.classList.add('d-none');
          subtotalContainer.classList.add('d-none');
          gstAmountContainer.classList.add('d-none');
          totalWithGstContainer.classList.add('d-none');
        }
      });
    }

    // Calculate GST amount on page load if GST is enabled
    if (gstEnabledCheckbox && gstEnabledCheckbox.checked) {
      calculateGstAmount();
    }

    // Add validation for bill date
    const billDateInput = document.getElementById('billDate');
    if (billDateInput) {
      billDateInput.addEventListener('change', function() {
        const selectedDate = new Date(this.value);
        const today = new Date();
        today.setHours(23, 59, 59, 999); // Set to end of today

        if (selectedDate > today) {
          alert('Bill date cannot be in the future. Please select today or a past date.');
          this.value = '<%= bill.billDate ? bill.billDate.toISOString().split("T")[0] : new Date().toISOString().split("T")[0] %>'; // Reset to original or today
        }
      });
    }
  });
</script>

<%- include('../partials/footer') %>
